

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jun 18 18:05:57 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0008                     	;# 
   134     0009                     	;# 
   135     000A                     	;# 
   136     000B                     	;# 
   137     000C                     	;# 
   138     000D                     	;# 
   139     000E                     	;# 
   140     000E                     	;# 
   141     000F                     	;# 
   142     0010                     	;# 
   143     0011                     	;# 
   144     0012                     	;# 
   145     0013                     	;# 
   146     0014                     	;# 
   147     0015                     	;# 
   148     0015                     	;# 
   149     0016                     	;# 
   150     0017                     	;# 
   151     0018                     	;# 
   152     0019                     	;# 
   153     001A                     	;# 
   154     001B                     	;# 
   155     001B                     	;# 
   156     001C                     	;# 
   157     001D                     	;# 
   158     001E                     	;# 
   159     001F                     	;# 
   160     0081                     	;# 
   161     0085                     	;# 
   162     0086                     	;# 
   163     0087                     	;# 
   164     0088                     	;# 
   165     0089                     	;# 
   166     008C                     	;# 
   167     008D                     	;# 
   168     008E                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0094                     	;# 
   173     0098                     	;# 
   174     0099                     	;# 
   175     009C                     	;# 
   176     009D                     	;# 
   177     009E                     	;# 
   178     009F                     	;# 
   179     010C                     	;# 
   180     010D                     	;# 
   181     010E                     	;# 
   182     010F                     	;# 
   183     018C                     	;# 
   184     018D                     	;# 
   185     0000                     	;# 
   186     0001                     	;# 
   187     0002                     	;# 
   188     0003                     	;# 
   189     0004                     	;# 
   190     0005                     	;# 
   191     0006                     	;# 
   192     0007                     	;# 
   193     0008                     	;# 
   194     0009                     	;# 
   195     000A                     	;# 
   196     000B                     	;# 
   197     000C                     	;# 
   198     000D                     	;# 
   199     000E                     	;# 
   200     000E                     	;# 
   201     000F                     	;# 
   202     0010                     	;# 
   203     0011                     	;# 
   204     0012                     	;# 
   205     0013                     	;# 
   206     0014                     	;# 
   207     0015                     	;# 
   208     0015                     	;# 
   209     0016                     	;# 
   210     0017                     	;# 
   211     0018                     	;# 
   212     0019                     	;# 
   213     001A                     	;# 
   214     001B                     	;# 
   215     001B                     	;# 
   216     001C                     	;# 
   217     001D                     	;# 
   218     001E                     	;# 
   219     001F                     	;# 
   220     0081                     	;# 
   221     0085                     	;# 
   222     0086                     	;# 
   223     0087                     	;# 
   224     0088                     	;# 
   225     0089                     	;# 
   226     008C                     	;# 
   227     008D                     	;# 
   228     008E                     	;# 
   229     0091                     	;# 
   230     0092                     	;# 
   231     0093                     	;# 
   232     0094                     	;# 
   233     0098                     	;# 
   234     0099                     	;# 
   235     009C                     	;# 
   236     009D                     	;# 
   237     009E                     	;# 
   238     009F                     	;# 
   239     010C                     	;# 
   240     010D                     	;# 
   241     010E                     	;# 
   242     010F                     	;# 
   243     018C                     	;# 
   244     018D                     	;# 
   245                           
   246                           	psect	idataBANK0
   247     0246                     __pidataBANK0:
   248                           
   249                           ;initializer for _dc
   250     0246  34C8               	retlw	200
   251     0247  3400               	retlw	0
   252     0019                     _TXREG	set	25
   253     001A                     _RCREG	set	26
   254     0015                     _CCPR1L	set	21
   255     0017                     _CCP1CONbits	set	23
   256     0064                     _TXIF	set	100
   257     00C6                     _RX9	set	198
   258     005F                     _GIE	set	95
   259     005E                     _PEIE	set	94
   260     00C7                     _SPEN	set	199
   261     00C4                     _CREN	set	196
   262     00C1                     _OERR	set	193
   263     0065                     _RCIF	set	101
   264     0041                     _RD1	set	65
   265     0040                     _RD0	set	64
   266     0092                     _TMR2ON	set	146
   267     0090                     _T2CKPS0	set	144
   268     0091                     _T2CKPS1	set	145
   269     00BA                     _CCP1M2	set	186
   270     00BB                     _CCP1M3	set	187
   271     0099                     _SPBRG	set	153
   272     0087                     _TRISCbits	set	135
   273     0092                     _PR2	set	146
   274     04C6                     _TX9	set	1222
   275     04C5                     _TXEN	set	1221
   276     0465                     _RCIE	set	1125
   277     04C4                     _SYNC	set	1220
   278     04C2                     _BRGH	set	1218
   279     0441                     _TRISD1	set	1089
   280     0440                     _TRISD0	set	1088
   281     043A                     _TRISC2	set	1082
   282                           
   283                           	psect	strings
   284     002A                     __pstrings:
   285     002A                     stringtab:
   286     002A                     __stringtab:
   287                           
   288                           ;	String table - string pointers are 1 byte each
   289     002A  1BFF               	btfsc	btemp+1,7
   290     002B  2834               	ljmp	stringcode
   291     002C  1383               	bcf	3,7
   292     002D  187F               	btfsc	btemp+1,0
   293     002E  1783               	bsf	3,7
   294     002F  0800               	movf	0,w
   295     0030  0A84               	incf	4,f
   296     0031  1903               	skipnz
   297     0032  0AFF               	incf	btemp+1,f
   298     0033  0008               	return
   299     0034                     stringcode:
   300     0034                     stringdir:
   301     0034  3000               	movlw	high stringdir
   302     0035  008A               	movwf	10
   303     0036  0804               	movf	4,w
   304     0037  0A84               	incf	4,f
   305     0038  0782               	addwf	2,f
   306     0039                     __stringbase:
   307     0039  3400               	retlw	0
   308     003A                     __end_of__stringtab:
   309     003A                     STR_1:
   310     003A  3449               	retlw	73	;'I'
   311     003B  346E               	retlw	110	;'n'
   312     003C  3476               	retlw	118	;'v'
   313     003D  3461               	retlw	97	;'a'
   314     003E  346C               	retlw	108	;'l'
   315     003F  3469               	retlw	105	;'i'
   316     0040  3464               	retlw	100	;'d'
   317     0041  3420               	retlw	32	;' '
   318     0042  3464               	retlw	100	;'d'
   319     0043  3475               	retlw	117	;'u'
   320     0044  3474               	retlw	116	;'t'
   321     0045  3479               	retlw	121	;'y'
   322     0046  3420               	retlw	32	;' '
   323     0047  3463               	retlw	99	;'c'
   324     0048  3479               	retlw	121	;'y'
   325     0049  3463               	retlw	99	;'c'
   326     004A  346C               	retlw	108	;'l'
   327     004B  3465               	retlw	101	;'e'
   328     004C  340D               	retlw	13
   329     004D  340A               	retlw	10
   330     004E  3400               	retlw	0
   331     004F                     STR_2:
   332     004F  3449               	retlw	73	;'I'
   333     0050  346E               	retlw	110	;'n'
   334     0051  3476               	retlw	118	;'v'
   335     0052  3461               	retlw	97	;'a'
   336     0053  346C               	retlw	108	;'l'
   337     0054  3469               	retlw	105	;'i'
   338     0055  3464               	retlw	100	;'d'
   339     0056  3420               	retlw	32	;' '
   340     0057  3463               	retlw	99	;'c'
   341     0058  346F               	retlw	111	;'o'
   342     0059  346D               	retlw	109	;'m'
   343     005A  346D               	retlw	109	;'m'
   344     005B  3461               	retlw	97	;'a'
   345     005C  346E               	retlw	110	;'n'
   346     005D  3464               	retlw	100	;'d'
   347     005E  340D               	retlw	13
   348     005F  340A               	retlw	10
   349     0060  3400               	retlw	0
   350     0061                     STR_4:
   351     0061  3453               	retlw	83	;'S'
   352     0062  3479               	retlw	121	;'y'
   353     0063  3473               	retlw	115	;'s'
   354     0064  3474               	retlw	116	;'t'
   355     0065  3465               	retlw	101	;'e'
   356     0066  346D               	retlw	109	;'m'
   357     0067  3420               	retlw	32	;' '
   358     0068  3469               	retlw	105	;'i'
   359     0069  3473               	retlw	115	;'s'
   360     006A  3420               	retlw	32	;' '
   361     006B  3472               	retlw	114	;'r'
   362     006C  3465               	retlw	101	;'e'
   363     006D  3461               	retlw	97	;'a'
   364     006E  3464               	retlw	100	;'d'
   365     006F  3479               	retlw	121	;'y'
   366     0070  340D               	retlw	13
   367     0071  340A               	retlw	10
   368     0072  3400               	retlw	0
   369     0073                     STR_3:
   370     0073  3452               	retlw	82	;'R'
   371     0074  3465               	retlw	101	;'e'
   372     0075  3463               	retlw	99	;'c'
   373     0076  3465               	retlw	101	;'e'
   374     0077  3469               	retlw	105	;'i'
   375     0078  3476               	retlw	118	;'v'
   376     0079  3465               	retlw	101	;'e'
   377     007A  3464               	retlw	100	;'d'
   378     007B  343A               	retlw	58	;':'
   379     007C  3420               	retlw	32	;' '
   380     007D  3425               	retlw	37	;'%'
   381     007E  3463               	retlw	99	;'c'
   382     007F  340D               	retlw	13
   383     0080  340A               	retlw	10
   384     0081  3400               	retlw	0
   385                           
   386                           	psect	cinit
   387     0013                     start_initialization:	
   388                           ; #config settings
   389                           
   390     0013                     __initialization:
   391                           
   392                           ; Initialize objects allocated to BANK0
   393     0013  120A  118A  2246  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   394     0018  00BC               	movwf	__pdataBANK0& (0+127)
   395     0019  120A  118A  2247  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   396     001E  00BD               	movwf	(__pdataBANK0+1)& (0+127)
   397                           
   398                           ; Clear objects allocated to BANK0
   399     001F  1383               	bcf	3,7	;select IRP bank0
   400     0020  3020               	movlw	low __pbssBANK0
   401     0021  0084               	movwf	4
   402     0022  3032               	movlw	low (__pbssBANK0+18)
   403     0023  120A  118A  2226   	fcall	clear_ram0
   404     0026                     end_of_initialization:	
   405                           ;End of C runtime variable initialization code
   406                           
   407     0026                     __end_of__initialization:
   408     0026  0183               	clrf	3
   409     0027  120A  118A  2904   	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	bssBANK0
   412     0020                     __pbssBANK0:
   413     0020                     _command:
   414     0020                     	ds	1
   415     0021                     _rcvStr:
   416     0021                     	ds	17
   417                           
   418                           	psect	dataBANK0
   419     003C                     __pdataBANK0:
   420     003C                     _dc:
   421     003C                     	ds	2
   422                           
   423                           	psect	clrtext
   424     0226                     clear_ram0:	
   425                           ;	Called with FSR containing the base address, and
   426                           ;	W with the last address+1
   427                           
   428     0226  0064               	clrwdt	;clear the watchdog before getting into this loop
   429     0227                     clrloop0:
   430     0227  0180               	clrf	0	;clear RAM location pointed to by FSR
   431     0228  0A84               	incf	4,f	;increment pointer
   432     0229  0604               	xorwf	4,w	;XOR with final address
   433     022A  1903               	btfsc	3,2	;have we reached the end yet?
   434     022B  3400               	retlw	0	;all done for this memory range, return
   435     022C  0604               	xorwf	4,w	;XOR again to restore value
   436     022D  2A27               	goto	clrloop0	;do the next byte
   437                           
   438                           	psect	cstackCOMMON
   439     0070                     __pcstackCOMMON:
   440     0070                     ?_UART_Init:
   441     0070                     ?_PWM_Init:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_Timer2_Init:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ?_Command_Handling:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0070                     ?_ISR:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0070                     ?_main:	
   454                           ; 1 bytes @ 0x0
   455                           
   456     0070                     ?_UART_sendChar:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0070                     ?i1_UART_sendChar:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0070                     ??i1_UART_sendChar:	
   463                           ; 1 bytes @ 0x0
   464                           
   465     0070                     ?_sprintf:	
   466                           ; 1 bytes @ 0x0
   467                           
   468     0070                     sprintf@f:	
   469                           ; 2 bytes @ 0x0
   470                           
   471     0070                     i1UART_sendChar@data:	
   472                           ; 1 bytes @ 0x0
   473                           
   474                           
   475                           ; 1 bytes @ 0x0
   476     0070                     	ds	1
   477     0071                     ?i1_UART_sendString:
   478     0071                     i1UART_sendString@str:	
   479                           ; 1 bytes @ 0x1
   480                           
   481                           
   482                           ; 2 bytes @ 0x1
   483     0071                     	ds	2
   484     0073                     ??_sprintf:
   485     0073                     ?i1_DC_Speed:	
   486                           ; 1 bytes @ 0x3
   487                           
   488     0073                     ??i1_UART_sendString:	
   489                           ; 1 bytes @ 0x3
   490                           
   491     0073                     i1DC_Speed@dutyCycle:	
   492                           ; 1 bytes @ 0x3
   493                           
   494                           
   495                           ; 2 bytes @ 0x3
   496     0073                     	ds	2
   497     0075                     ??i1_DC_Speed:
   498     0075                     sprintf@ap:	
   499                           ; 1 bytes @ 0x5
   500                           
   501                           
   502                           ; 1 bytes @ 0x5
   503     0075                     	ds	1
   504     0076                     sprintf@c:
   505                           
   506                           ; 1 bytes @ 0x6
   507     0076                     	ds	1
   508     0077                     ??_Command_Handling:
   509     0077                     Command_Handling@com:	
   510                           ; 1 bytes @ 0x7
   511                           
   512     0077                     sprintf@sp:	
   513                           ; 1 bytes @ 0x7
   514                           
   515                           
   516                           ; 1 bytes @ 0x7
   517     0077                     	ds	1
   518     0078                     ??_ISR:
   519                           
   520                           ; 1 bytes @ 0x8
   521     0078                     	ds	6
   522                           
   523                           	psect	cstackBANK0
   524     0032                     __pcstackBANK0:
   525     0032                     ??_UART_Init:
   526     0032                     ??_PWM_Init:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0032                     ??_Timer2_Init:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0032                     ??_UART_sendChar:	
   533                           ; 1 bytes @ 0x0
   534                           
   535     0032                     UART_sendChar@data:	
   536                           ; 1 bytes @ 0x0
   537                           
   538                           
   539                           ; 1 bytes @ 0x0
   540     0032                     	ds	1
   541     0033                     ?_UART_sendString:
   542     0033                     UART_sendString@str:	
   543                           ; 1 bytes @ 0x1
   544                           
   545                           
   546                           ; 2 bytes @ 0x1
   547     0033                     	ds	2
   548     0035                     ??_UART_sendString:
   549     0035                     ?_DC_Speed:	
   550                           ; 1 bytes @ 0x3
   551                           
   552     0035                     DC_Speed@dutyCycle:	
   553                           ; 1 bytes @ 0x3
   554                           
   555                           
   556                           ; 2 bytes @ 0x3
   557     0035                     	ds	2
   558     0037                     ??_DC_Speed:
   559                           
   560                           ; 1 bytes @ 0x5
   561     0037                     	ds	2
   562     0039                     ??_main:
   563                           
   564                           ; 1 bytes @ 0x7
   565     0039                     	ds	3
   566                           
   567                           	psect	maintext
   568     0104                     __pmaintext:	
   569 ;;
   570 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   571 ;;
   572 ;; *************** function _main *****************
   573 ;; Defined at:
   574 ;;		line 111 in file "HC05_Bluetooth.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   583 ;; Tracked objects:
   584 ;;		On entry : B00/0
   585 ;;		On exit  : 300/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   588 ;;      Params:         0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0
   590 ;;      Temps:          0       3       0       0       0
   591 ;;      Totals:         0       3       0       0       0
   592 ;;Total ram usage:        3 bytes
   593 ;; Hardware stack levels required when called: 8
   594 ;; This function calls:
   595 ;;		_DC_Speed
   596 ;;		_PWM_Init
   597 ;;		_Timer2_Init
   598 ;;		_UART_Init
   599 ;;		_UART_sendString
   600 ;; This function is called by:
   601 ;;		Startup code after reset
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605     0104                     _main:	
   606                           ;psect for function _main
   607                           
   608                           
   609                           ;HC05_Bluetooth.c: 113:     TRISD0 = 0;
   610                           
   611                           ;incstack = 0
   612                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   613     0104  1683               	bsf	3,5	;RP0=1, select bank1
   614     0105  1008               	bcf	8,0	;volatile
   615                           
   616                           ;HC05_Bluetooth.c: 114:     TRISD1 = 0;
   617     0106  1088               	bcf	8,1	;volatile
   618                           
   619                           ;HC05_Bluetooth.c: 116:     PWM_Init();
   620     0107  120A  118A  2241  120A  118A  	fcall	_PWM_Init
   621                           
   622                           ;HC05_Bluetooth.c: 117:     Timer2_Init();
   623     010C  120A  118A  222E  120A  118A  	fcall	_Timer2_Init
   624                           
   625                           ;HC05_Bluetooth.c: 118:     UART_Init();
   626     0111  120A  118A  2211  120A  118A  	fcall	_UART_Init
   627                           
   628                           ;HC05_Bluetooth.c: 119:     _delay((unsigned long)((50)*(16000000/4000.0)));
   629     0116  3002               	movlw	2
   630     0117  1283               	bcf	3,5	;RP0=0, select bank0
   631     0118  1303               	bcf	3,6	;RP1=0, select bank0
   632     0119  00BB               	movwf	??_main+2
   633     011A  3004               	movlw	4
   634     011B  00BA               	movwf	??_main+1
   635     011C  30B9               	movlw	185
   636     011D  00B9               	movwf	??_main
   637     011E                     u297:
   638     011E  0BB9               	decfsz	??_main,f
   639     011F  291E               	goto	u297
   640     0120  0BBA               	decfsz	??_main+1,f
   641     0121  291E               	goto	u297
   642     0122  0BBB               	decfsz	??_main+2,f
   643     0123  291E               	goto	u297
   644     0124  2925               	nop2
   645                           
   646                           ;HC05_Bluetooth.c: 120:     UART_sendString("System is ready\r\n");
   647     0125  3028               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   648     0126  1283               	bcf	3,5	;RP0=0, select bank0
   649     0127  1303               	bcf	3,6	;RP1=0, select bank0
   650     0128  00B3               	movwf	UART_sendString@str
   651     0129  3080               	movlw	128
   652     012A  00B4               	movwf	UART_sendString@str+1
   653     012B  120A  118A  21CF  120A  118A  	fcall	_UART_sendString
   654                           
   655                           ;HC05_Bluetooth.c: 122:     RD0 = 1;
   656     0130  1408               	bsf	8,0	;volatile
   657                           
   658                           ;HC05_Bluetooth.c: 123:     RD1 = 0;
   659     0131  1088               	bcf	8,1	;volatile
   660                           
   661                           ;HC05_Bluetooth.c: 124:     DC_Speed(dc);
   662     0132  083D               	movf	_dc+1,w
   663     0133  00B6               	movwf	DC_Speed@dutyCycle+1
   664     0134  083C               	movf	_dc,w
   665     0135  00B5               	movwf	DC_Speed@dutyCycle
   666     0136  120A  118A  216F  120A  118A  	fcall	_DC_Speed
   667     013B                     l82:	
   668                           ;HC05_Bluetooth.c: 126:     while(1)
   669                           
   670                           
   671                           ;HC05_Bluetooth.c: 127:     {;HC05_Bluetooth.c: 128:     }
   672     013B  293B               	goto	l82
   673     013C                     __end_of_main:
   674                           
   675                           	psect	text1
   676     0211                     __ptext1:	
   677 ;; *************** function _UART_Init *****************
   678 ;; Defined at:
   679 ;;		line 4 in file "UART.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg
   688 ;; Tracked objects:
   689 ;;		On entry : B00/0
   690 ;;		On exit  : B00/0
   691 ;;		Unchanged: 800/0
   692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   693 ;;      Params:         0       0       0       0       0
   694 ;;      Locals:         0       0       0       0       0
   695 ;;      Temps:          0       0       0       0       0
   696 ;;      Totals:         0       0       0       0       0
   697 ;;Total ram usage:        0 bytes
   698 ;; Hardware stack levels used: 1
   699 ;; Hardware stack levels required when called: 5
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707     0211                     _UART_Init:	
   708                           ;psect for function _UART_Init
   709                           
   710                           
   711                           ;UART.c: 7:     TRISCbits.TRISC6 = 1;
   712                           
   713                           ;incstack = 0
   714                           ; Regs used in _UART_Init: [wreg]
   715     0211  1683               	bsf	3,5	;RP0=1, select bank1
   716     0212  1707               	bsf	7,6	;volatile
   717                           
   718                           ;UART.c: 8:     TRISCbits.TRISC7 = 1;
   719     0213  1787               	bsf	7,7	;volatile
   720                           
   721                           ;UART.c: 10:     SPBRG = ((16000000 / 16) / 9600) - 1;
   722     0214  3067               	movlw	103
   723     0215  0099               	movwf	25	;volatile
   724                           
   725                           ;UART.c: 11:     BRGH = 1;
   726     0216  1518               	bsf	24,2	;volatile
   727                           
   728                           ;UART.c: 13:     SYNC = 0;
   729     0217  1218               	bcf	24,4	;volatile
   730                           
   731                           ;UART.c: 14:     SPEN = 1;
   732     0218  1283               	bcf	3,5	;RP0=0, select bank0
   733     0219  1798               	bsf	24,7	;volatile
   734                           
   735                           ;UART.c: 16:     RCIE = 1;
   736     021A  1683               	bsf	3,5	;RP0=1, select bank1
   737     021B  168C               	bsf	12,5	;volatile
   738                           
   739                           ;UART.c: 17:     PEIE = 1;
   740     021C  170B               	bsf	11,6	;volatile
   741                           
   742                           ;UART.c: 18:     GIE = 1;
   743     021D  178B               	bsf	11,7	;volatile
   744                           
   745                           ;UART.c: 20:     TXEN = 1;
   746     021E  1698               	bsf	24,5	;volatile
   747                           
   748                           ;UART.c: 21:     CREN = 1;
   749     021F  1283               	bcf	3,5	;RP0=0, select bank0
   750     0220  1618               	bsf	24,4	;volatile
   751                           
   752                           ;UART.c: 23:     TX9 = 0;
   753     0221  1683               	bsf	3,5	;RP0=1, select bank1
   754     0222  1318               	bcf	24,6	;volatile
   755                           
   756                           ;UART.c: 24:     RX9 = 0;
   757     0223  1283               	bcf	3,5	;RP0=0, select bank0
   758     0224  1318               	bcf	24,6	;volatile
   759     0225  0008               	return
   760     0226                     __end_of_UART_Init:
   761                           
   762                           	psect	text2
   763     022E                     __ptext2:	
   764 ;; *************** function _Timer2_Init *****************
   765 ;; Defined at:
   766 ;;		line 35 in file "HC05_Bluetooth.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg
   775 ;; Tracked objects:
   776 ;;		On entry : B00/0
   777 ;;		On exit  : B00/0
   778 ;;		Unchanged: 800/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   780 ;;      Params:         0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0
   783 ;;      Totals:         0       0       0       0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels used: 1
   786 ;; Hardware stack levels required when called: 5
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		_main
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794     022E                     _Timer2_Init:	
   795                           ;psect for function _Timer2_Init
   796                           
   797                           
   798                           ;HC05_Bluetooth.c: 37:     PR2 = ((16000000 / 16) / 2000/4) - 1;
   799                           
   800                           ;incstack = 0
   801                           ; Regs used in _Timer2_Init: [wreg]
   802     022E  307C               	movlw	124
   803     022F  1683               	bsf	3,5	;RP0=1, select bank1
   804     0230  0092               	movwf	18	;volatile
   805                           
   806                           ;HC05_Bluetooth.c: 39:     T2CKPS1 = 1;
   807     0231  1283               	bcf	3,5	;RP0=0, select bank0
   808     0232  1492               	bsf	18,1	;volatile
   809                           
   810                           ;HC05_Bluetooth.c: 40:     T2CKPS0 = 1;
   811     0233  1412               	bsf	18,0	;volatile
   812     0234  0008               	return
   813     0235                     __end_of_Timer2_Init:
   814                           
   815                           	psect	text3
   816     0241                     __ptext3:	
   817 ;; *************** function _PWM_Init *****************
   818 ;; Defined at:
   819 ;;		line 26 in file "HC05_Bluetooth.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		None
   828 ;; Tracked objects:
   829 ;;		On entry : B00/100
   830 ;;		On exit  : B00/0
   831 ;;		Unchanged: 800/0
   832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   833 ;;      Params:         0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0
   836 ;;      Totals:         0       0       0       0       0
   837 ;;Total ram usage:        0 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; Hardware stack levels required when called: 5
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847     0241                     _PWM_Init:	
   848                           ;psect for function _PWM_Init
   849                           
   850                           
   851                           ;HC05_Bluetooth.c: 28:     TRISC2 = 0;
   852                           
   853                           ;incstack = 0
   854                           ; Regs used in _PWM_Init: []
   855     0241  1107               	bcf	7,2	;volatile
   856                           
   857                           ;HC05_Bluetooth.c: 30:     CCP1M3 = 1;
   858     0242  1283               	bcf	3,5	;RP0=0, select bank0
   859     0243  1597               	bsf	23,3	;volatile
   860                           
   861                           ;HC05_Bluetooth.c: 31:     CCP1M2 = 1;
   862     0244  1517               	bsf	23,2	;volatile
   863     0245  0008               	return
   864     0246                     __end_of_PWM_Init:
   865                           
   866                           	psect	text4
   867     016F                     __ptext4:	
   868 ;; *************** function _DC_Speed *****************
   869 ;; Defined at:
   870 ;;		line 44 in file "HC05_Bluetooth.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  dutyCycle       2    3[BANK0 ] unsigned int 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 300/0
   881 ;;		On exit  : 300/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   884 ;;      Params:         0       2       0       0       0
   885 ;;      Locals:         0       0       0       0       0
   886 ;;      Temps:          0       2       0       0       0
   887 ;;      Totals:         0       4       0       0       0
   888 ;;Total ram usage:        4 bytes
   889 ;; Hardware stack levels used: 1
   890 ;; Hardware stack levels required when called: 7
   891 ;; This function calls:
   892 ;;		_UART_sendString
   893 ;; This function is called by:
   894 ;;		_main
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898     016F                     _DC_Speed:	
   899                           ;psect for function _DC_Speed
   900                           
   901                           
   902                           ;HC05_Bluetooth.c: 45:     if(dutyCycle <= (16000000 / 16) / 2000){
   903                           
   904                           ;incstack = 0
   905                           ; Regs used in _DC_Speed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   906     016F  3001               	movlw	1
   907     0170  0236               	subwf	DC_Speed@dutyCycle+1,w
   908     0171  30F5               	movlw	245
   909     0172  1903               	skipnz
   910     0173  0235               	subwf	DC_Speed@dutyCycle,w
   911     0174  1803               	skipnc
   912     0175  2997               	goto	l971
   913                           
   914                           ;HC05_Bluetooth.c: 47:         CCP1CONbits.CCP1Y = (dutyCycle) & 1;
   915     0176  0835               	movf	DC_Speed@dutyCycle,w
   916     0177  3901               	andlw	1
   917     0178  00B7               	movwf	??_DC_Speed
   918     0179  0EB7               	swapf	??_DC_Speed,f
   919     017A  0817               	movf	23,w	;volatile
   920     017B  0637               	xorwf	??_DC_Speed,w
   921     017C  39EF               	andlw	-17
   922     017D  0637               	xorwf	??_DC_Speed,w
   923     017E  0097               	movwf	23	;volatile
   924                           
   925                           ;HC05_Bluetooth.c: 48:         CCP1CONbits.CCP1X = (dutyCycle) & 2;
   926     017F  0835               	movf	DC_Speed@dutyCycle,w
   927     0180  3902               	andlw	2
   928     0181  00B7               	movwf	??_DC_Speed
   929     0182  0EB7               	swapf	??_DC_Speed,f
   930     0183  0DB7               	rlf	??_DC_Speed,f
   931     0184  0817               	movf	23,w	;volatile
   932     0185  0637               	xorwf	??_DC_Speed,w
   933     0186  39DF               	andlw	-33
   934     0187  0637               	xorwf	??_DC_Speed,w
   935     0188  0097               	movwf	23	;volatile
   936                           
   937                           ;HC05_Bluetooth.c: 50:         CCPR1L = (dutyCycle) >> 2;
   938     0189  0836               	movf	DC_Speed@dutyCycle+1,w
   939     018A  00B8               	movwf	??_DC_Speed+1
   940     018B  0835               	movf	DC_Speed@dutyCycle,w
   941     018C  00B7               	movwf	??_DC_Speed
   942     018D  1003               	clrc
   943     018E  0CB8               	rrf	??_DC_Speed+1,f
   944     018F  0CB7               	rrf	??_DC_Speed,f
   945     0190  1003               	clrc
   946     0191  0CB8               	rrf	??_DC_Speed+1,f
   947     0192  0CB7               	rrf	??_DC_Speed,f
   948     0193  0837               	movf	??_DC_Speed,w
   949     0194  0095               	movwf	21	;volatile
   950                           
   951                           ;HC05_Bluetooth.c: 52:         TMR2ON = 1;
   952     0195  1512               	bsf	18,2	;volatile
   953                           
   954                           ;HC05_Bluetooth.c: 53:     }
   955     0196  0008               	return
   956     0197                     l971:
   957                           
   958                           ;HC05_Bluetooth.c: 55:     {;HC05_Bluetooth.c: 56:         UART_sendString("Invalid duty
      +                           cycle\r\n");
   959     0197  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   960     0198  00B3               	movwf	UART_sendString@str
   961     0199  3080               	movlw	128
   962     019A  00B4               	movwf	UART_sendString@str+1
   963     019B  120A  118A  21CF   	fcall	_UART_sendString
   964     019E  0008               	return
   965     019F                     __end_of_DC_Speed:
   966                           
   967                           	psect	text5
   968     01CF                     __ptext5:	
   969 ;; *************** function _UART_sendString *****************
   970 ;; Defined at:
   971 ;;		line 42 in file "UART.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  str             2    1[BANK0 ] PTR unsigned char 
   974 ;;		 -> STR_4(18), rcvStr(17), STR_2(18), STR_1(21), 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;		None
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   981 ;; Tracked objects:
   982 ;;		On entry : 300/0
   983 ;;		On exit  : 300/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   986 ;;      Params:         0       2       0       0       0
   987 ;;      Locals:         0       0       0       0       0
   988 ;;      Temps:          0       0       0       0       0
   989 ;;      Totals:         0       2       0       0       0
   990 ;;Total ram usage:        2 bytes
   991 ;; Hardware stack levels used: 1
   992 ;; Hardware stack levels required when called: 6
   993 ;; This function calls:
   994 ;;		_UART_sendChar
   995 ;; This function is called by:
   996 ;;		_DC_Speed
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001     01CF                     _UART_sendString:	
  1002                           ;psect for function _UART_sendString
  1003                           
  1004     01CF                     l947:	
  1005                           ;UART.c: 42: void UART_sendString(char* str);UART.c: 43: {;UART.c: 44:    while (*str)
  1006                           
  1007                           ;incstack = 0
  1008                           ; Regs used in _UART_sendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1009                           
  1010                           
  1011                           ;UART.c: 44:    while (*str)
  1012     01CF  0834               	movf	UART_sendString@str+1,w
  1013     01D0  00FF               	movwf	127
  1014     01D1  0833               	movf	UART_sendString@str,w
  1015     01D2  0084               	movwf	4
  1016     01D3  120A  118A  202A  120A  118A  	fcall	stringtab
  1017     01D8  3A00               	xorlw	0
  1018     01D9  1903               	btfsc	3,2
  1019     01DA  0008               	return
  1020                           
  1021                           ;UART.c: 45:    {;UART.c: 46:        UART_sendChar(*str++);
  1022     01DB  0834               	movf	UART_sendString@str+1,w
  1023     01DC  00FF               	movwf	127
  1024     01DD  0833               	movf	UART_sendString@str,w
  1025     01DE  0084               	movwf	4
  1026     01DF  120A  118A  202A  120A  118A  	fcall	stringtab
  1027     01E4  120A  118A  2235  120A  118A  	fcall	_UART_sendChar
  1028     01E9  3001               	movlw	1
  1029     01EA  07B3               	addwf	UART_sendString@str,f
  1030     01EB  1803               	skipnc
  1031     01EC  0AB4               	incf	UART_sendString@str+1,f
  1032     01ED  3000               	movlw	0
  1033     01EE  07B4               	addwf	UART_sendString@str+1,f
  1034     01EF  29CF               	goto	l947
  1035     01F0                     __end_of_UART_sendString:
  1036                           
  1037                           	psect	text6
  1038     0235                     __ptext6:	
  1039 ;; *************** function _UART_sendChar *****************
  1040 ;; Defined at:
  1041 ;;		line 28 in file "UART.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  data            1    wreg     unsigned char 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  data            1    0[BANK0 ] unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg
  1050 ;; Tracked objects:
  1051 ;;		On entry : 300/0
  1052 ;;		On exit  : 300/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         0       0       0       0       0
  1056 ;;      Locals:         0       1       0       0       0
  1057 ;;      Temps:          0       0       0       0       0
  1058 ;;      Totals:         0       1       0       0       0
  1059 ;;Total ram usage:        1 bytes
  1060 ;; Hardware stack levels used: 1
  1061 ;; Hardware stack levels required when called: 5
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_UART_sendString
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069     0235                     _UART_sendChar:	
  1070                           ;psect for function _UART_sendChar
  1071                           
  1072                           
  1073                           ;incstack = 0
  1074                           ; Regs used in _UART_sendChar: [wreg]
  1075                           ;UART_sendChar@data stored from wreg
  1076     0235  00B2               	movwf	UART_sendChar@data
  1077     0236                     l119:	
  1078                           ;UART.c: 28: void UART_sendChar(char data);UART.c: 29: {;UART.c: 30:    while (!TXIF);
  1079                           
  1080     0236  1E0C               	btfss	12,4	;volatile
  1081     0237  2A36               	goto	l119
  1082                           
  1083                           ;UART.c: 31:    TXREG = data;
  1084     0238  0832               	movf	UART_sendChar@data,w
  1085     0239  0099               	movwf	25	;volatile
  1086     023A  0008               	return
  1087     023B                     __end_of_UART_sendChar:
  1088                           
  1089                           	psect	text7
  1090     013C                     __ptext7:	
  1091 ;; *************** function _ISR *****************
  1092 ;; Defined at:
  1093 ;;		line 93 in file "HC05_Bluetooth.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 300/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0
  1109 ;;      Temps:          6       0       0       0       0
  1110 ;;      Totals:         6       0       0       0       0
  1111 ;;Total ram usage:        6 bytes
  1112 ;; Hardware stack levels used: 1
  1113 ;; Hardware stack levels required when called: 4
  1114 ;; This function calls:
  1115 ;;		_Command_Handling
  1116 ;;		_sprintf
  1117 ;;		i1_UART_sendString
  1118 ;; This function is called by:
  1119 ;;		Interrupt level 1
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123     013C                     _ISR:	
  1124                           ;psect for function _ISR
  1125                           
  1126                           
  1127                           ;HC05_Bluetooth.c: 96:     if(RCIF)
  1128     013C  1283               	bcf	3,5	;RP0=0, select bank0
  1129     013D  1303               	bcf	3,6	;RP1=0, select bank0
  1130     013E  1E8C               	btfss	12,5	;volatile
  1131     013F  2964               	goto	i1l77
  1132                           
  1133                           ;HC05_Bluetooth.c: 97:     {;HC05_Bluetooth.c: 99:         if (OERR)
  1134     0140  1C98               	btfss	24,1	;volatile
  1135     0141  2944               	goto	i1l1055
  1136                           
  1137                           ;HC05_Bluetooth.c: 100:         {;HC05_Bluetooth.c: 101:             CREN = 0;
  1138     0142  1218               	bcf	24,4	;volatile
  1139                           
  1140                           ;HC05_Bluetooth.c: 102:             CREN = 1;
  1141     0143  1618               	bsf	24,4	;volatile
  1142     0144                     i1l1055:
  1143                           
  1144                           ;HC05_Bluetooth.c: 104:         command = RCREG;
  1145     0144  081A               	movf	26,w	;volatile
  1146     0145  00A0               	movwf	_command
  1147                           
  1148                           ;HC05_Bluetooth.c: 105:         sprintf(rcvStr, "Received: %c\r\n", command);
  1149     0146  303A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1150     0147  00F0               	movwf	sprintf@f
  1151     0148  0820               	movf	_command,w
  1152     0149  00F8               	movwf	??_ISR
  1153     014A  01F9               	clrf	??_ISR+1
  1154     014B  0878               	movf	??_ISR,w
  1155     014C  00F1               	movwf	?_sprintf+1
  1156     014D  0879               	movf	??_ISR+1,w
  1157     014E  00F2               	movwf	?_sprintf+2
  1158     014F  3021               	movlw	(low (_rcvStr| 0))& (0+255)
  1159     0150  120A  118A  2082  120A  118A  	fcall	_sprintf
  1160                           
  1161                           ;HC05_Bluetooth.c: 106:         UART_sendString(rcvStr);
  1162     0155  3021               	movlw	(low (_rcvStr| 0))& (0+255)
  1163     0156  00F1               	movwf	i1UART_sendString@str
  1164     0157  3000               	movlw	0
  1165     0158  00F2               	movwf	i1UART_sendString@str+1
  1166     0159  120A  118A  21F0  120A  118A  	fcall	i1_UART_sendString
  1167                           
  1168                           ;HC05_Bluetooth.c: 107:         Command_Handling(command);
  1169     015E  0820               	movf	_command,w
  1170     015F  120A  118A  20CA  120A  118A  	fcall	_Command_Handling
  1171     0164                     i1l77:
  1172     0164  087D               	movf	??_ISR+5,w
  1173     0165  00FF               	movwf	127
  1174     0166  087C               	movf	??_ISR+4,w
  1175     0167  008A               	movwf	10
  1176     0168  087B               	movf	??_ISR+3,w
  1177     0169  0084               	movwf	4
  1178     016A  0E7A               	swapf	??_ISR+2,w
  1179     016B  0083               	movwf	3
  1180     016C  0EFE               	swapf	126,f
  1181     016D  0E7E               	swapf	126,w
  1182     016E  0009               	retfie
  1183     016F                     __end_of_ISR:
  1184                           
  1185                           	psect	intentry
  1186     0004                     __pintentry:	
  1187                           ;incstack = 0
  1188                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1189                           
  1190     0004                     interrupt_function:
  1191     007E                     saved_w	set	btemp
  1192     0004  00FE               	movwf	btemp
  1193     0005  0E03               	swapf	3,w
  1194     0006  00FA               	movwf	??_ISR+2
  1195     0007  0804               	movf	4,w
  1196     0008  00FB               	movwf	??_ISR+3
  1197     0009  080A               	movf	10,w
  1198     000A  00FC               	movwf	??_ISR+4
  1199     000B  087F               	movf	btemp+1,w
  1200     000C  00FD               	movwf	??_ISR+5
  1201     000D  120A  118A  293C   	ljmp	_ISR
  1202                           
  1203                           	psect	text8
  1204     0082                     __ptext8:	
  1205 ;; *************** function _sprintf *****************
  1206 ;; Defined at:
  1207 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  sp              1    wreg     PTR unsigned char 
  1210 ;;		 -> rcvStr(17), 
  1211 ;;  f               1    0[COMMON] PTR const unsigned char 
  1212 ;;		 -> STR_3(15), 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  sp              1    7[COMMON] PTR unsigned char 
  1215 ;;		 -> rcvStr(17), 
  1216 ;;  tmpval          4    0        struct .
  1217 ;;  cp              2    0        PTR const unsigned char 
  1218 ;;  len             2    0        unsigned int 
  1219 ;;  val             2    0        unsigned int 
  1220 ;;  c               1    6[COMMON] unsigned char 
  1221 ;;  ap              1    5[COMMON] PTR void [1]
  1222 ;;		 -> ?_sprintf(2), 
  1223 ;;  flag            1    0        unsigned char 
  1224 ;;  prec            1    0        char 
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  2    0[COMMON] int 
  1227 ;; Registers used:
  1228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1229 ;; Tracked objects:
  1230 ;;		On entry : 300/0
  1231 ;;		On exit  : B00/0
  1232 ;;		Unchanged: 300/0
  1233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1234 ;;      Params:         3       0       0       0       0
  1235 ;;      Locals:         3       0       0       0       0
  1236 ;;      Temps:          2       0       0       0       0
  1237 ;;      Totals:         8       0       0       0       0
  1238 ;;Total ram usage:        8 bytes
  1239 ;; Hardware stack levels used: 2
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_ISR
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247     0082                     _sprintf:	
  1248                           ;psect for function _sprintf
  1249                           
  1250                           
  1251                           ;incstack = 0
  1252                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1253                           ;sprintf@sp stored from wreg
  1254     0082  00F7               	movwf	sprintf@sp
  1255                           
  1256                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1257     0083  3071               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1258     0084  00F5               	movwf	sprintf@ap
  1259     0085                     i1l1015:	
  1260                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1261                           
  1262                           
  1263                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1264     0085  3001               	movlw	1
  1265     0086  07F0               	addwf	sprintf@f,f
  1266     0087  30FF               	movlw	-1
  1267     0088  0770               	addwf	sprintf@f,w
  1268     0089  0084               	movwf	4
  1269     008A  120A  118A  2034  120A  118A  	fcall	stringdir
  1270     008F  00F6               	movwf	sprintf@c
  1271     0090  0876               	movf	sprintf@c,w
  1272     0091  1903               	btfsc	3,2
  1273     0092  28C5               	goto	i1l1017
  1274                           
  1275                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1276     0093  3025               	movlw	37
  1277     0094  0676               	xorwf	sprintf@c,w
  1278     0095  1903               	btfsc	3,2
  1279     0096  28AA               	goto	i1l1013
  1280     0097  28A0               	goto	i1l1009
  1281     0098                     i1l1005:	
  1282                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1283                           
  1284                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1285                           
  1286                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1287                           
  1288                           
  1289                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 825:    c = (char
      +                          )(*(int *)__va_arg((*(int **)ap), (int)0));
  1290     0098  0875               	movf	sprintf@ap,w
  1291     0099  0084               	movwf	4
  1292     009A  0800               	movf	0,w
  1293     009B  00F6               	movwf	sprintf@c
  1294     009C  3002               	movlw	2
  1295     009D  00FF               	movwf	127
  1296     009E  087F               	movf	127,w
  1297     009F  07F5               	addwf	sprintf@ap,f
  1298     00A0                     i1l1009:
  1299                           
  1300                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 835:    ((*sp++ =
      +                           (c)));
  1301     00A0  0877               	movf	sprintf@sp,w
  1302     00A1  0084               	movwf	4
  1303     00A2  0876               	movf	sprintf@c,w
  1304     00A3  1383               	bcf	3,7	;select IRP bank0
  1305     00A4  0080               	movwf	0
  1306     00A5  3001               	movlw	1
  1307     00A6  00FF               	movwf	127
  1308     00A7  087F               	movf	127,w
  1309     00A8  07F7               	addwf	sprintf@sp,f
  1310                           
  1311                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 836:    continue;
  1312     00A9  2885               	goto	i1l1015
  1313     00AA                     i1l1013:
  1314     00AA  3001               	movlw	1
  1315     00AB  07F0               	addwf	sprintf@f,f
  1316     00AC  30FF               	movlw	-1
  1317     00AD  0770               	addwf	sprintf@f,w
  1318     00AE  0084               	movwf	4
  1319     00AF  120A  118A  2034  120A  118A  	fcall	stringdir
  1320     00B4  00F6               	movwf	sprintf@c
  1321     00B5  00F3               	movwf	??_sprintf
  1322     00B6  01F4               	clrf	??_sprintf+1
  1323                           
  1324                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1325                           ; Switch size 1, requested type "simple"
  1326                           ; Number of cases is 1, Range of values is 0 to 0
  1327                           ; switch strategies available:
  1328                           ; Name         Instructions Cycles
  1329                           ; simple_byte            4     3 (average)
  1330                           ; direct_byte           11     8 (fixed)
  1331                           ; jumptable            260     6 (fixed)
  1332                           ;	Chosen strategy is simple_byte
  1333     00B7  0874               	movf	??_sprintf+1,w
  1334     00B8  3A00               	xorlw	0	; case 0
  1335     00B9  1903               	skipnz
  1336     00BA  28BC               	goto	i1l1101
  1337     00BB  28A0               	goto	i1l1009
  1338     00BC                     i1l1101:
  1339                           
  1340                           ; Switch size 1, requested type "simple"
  1341                           ; Number of cases is 2, Range of values is 0 to 99
  1342                           ; switch strategies available:
  1343                           ; Name         Instructions Cycles
  1344                           ; simple_byte            7     4 (average)
  1345                           ; jumptable            260     6 (fixed)
  1346                           ;	Chosen strategy is simple_byte
  1347     00BC  0873               	movf	??_sprintf,w
  1348     00BD  3A00               	xorlw	0	; case 0
  1349     00BE  1903               	skipnz
  1350     00BF  28C5               	goto	i1l1017
  1351     00C0  3A63               	xorlw	99	; case 99
  1352     00C1  1903               	skipnz
  1353     00C2  2898               	goto	i1l1005
  1354     00C3  28A0               	goto	i1l1009
  1355     00C4  2885               	goto	i1l1015
  1356     00C5                     i1l1017:
  1357                           
  1358                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1359     00C5  0877               	movf	sprintf@sp,w
  1360     00C6  0084               	movwf	4
  1361     00C7  1383               	bcf	3,7	;select IRP bank0
  1362     00C8  0180               	clrf	0
  1363     00C9  0008               	return
  1364     00CA                     __end_of_sprintf:
  1365                           
  1366                           	psect	text9
  1367     00CA                     __ptext9:	
  1368 ;; *************** function _Command_Handling *****************
  1369 ;; Defined at:
  1370 ;;		line 61 in file "HC05_Bluetooth.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  com             1    wreg     unsigned char 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  com             1    7[COMMON] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 300/0
  1381 ;;		On exit  : 300/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         0       0       0       0       0
  1385 ;;      Locals:         1       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0
  1387 ;;      Totals:         1       0       0       0       0
  1388 ;;Total ram usage:        1 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 3
  1391 ;; This function calls:
  1392 ;;		i1_DC_Speed
  1393 ;;		i1_UART_sendString
  1394 ;; This function is called by:
  1395 ;;		_ISR
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399     00CA                     _Command_Handling:	
  1400                           ;psect for function _Command_Handling
  1401                           
  1402                           
  1403                           ;incstack = 0
  1404                           ; Regs used in _Command_Handling: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1405                           ;Command_Handling@com stored from wreg
  1406     00CA  00F7               	movwf	Command_Handling@com
  1407                           
  1408                           ;HC05_Bluetooth.c: 61: void Command_Handling(uint8_t com);HC05_Bluetooth.c: 62: {;HC05_B
      +                          luetooth.c: 64:     if(com == 48)
  1409     00CB  3030               	movlw	48
  1410     00CC  0677               	xorwf	Command_Handling@com,w
  1411     00CD  1D03               	btfss	3,2
  1412     00CE  28D6               	goto	i1l977
  1413                           
  1414                           ;HC05_Bluetooth.c: 65:     {;HC05_Bluetooth.c: 66:         DC_Speed(0);
  1415     00CF  3000               	movlw	0
  1416     00D0  00F3               	movwf	i1DC_Speed@dutyCycle
  1417     00D1  00F4               	movwf	i1DC_Speed@dutyCycle+1
  1418     00D2  120A  118A  219F   	fcall	i1_DC_Speed
  1419                           
  1420                           ;HC05_Bluetooth.c: 67:     }
  1421     00D5  0008               	return
  1422     00D6                     i1l977:
  1423     00D6  3032               	movlw	50
  1424     00D7  0677               	xorwf	Command_Handling@com,w
  1425     00D8  1D03               	btfss	3,2
  1426     00D9  28DF               	goto	i1l981
  1427                           
  1428                           ;HC05_Bluetooth.c: 70:     {;HC05_Bluetooth.c: 71:         RD0 = ~RD0;
  1429     00DA  3001               	movlw	1
  1430     00DB  0688               	xorwf	8,f
  1431                           
  1432                           ;HC05_Bluetooth.c: 72:         RD1 = ~RD1;
  1433     00DC  3002               	movlw	2
  1434     00DD  0688               	xorwf	8,f
  1435                           
  1436                           ;HC05_Bluetooth.c: 73:     }
  1437     00DE  0008               	return
  1438     00DF                     i1l981:
  1439     00DF  3034               	movlw	52
  1440     00E0  0677               	xorwf	Command_Handling@com,w
  1441     00E1  1D03               	btfss	3,2
  1442     00E2  28F8               	goto	i1l987
  1443                           
  1444                           ;HC05_Bluetooth.c: 76:     {;HC05_Bluetooth.c: 77:         dc += 100;
  1445     00E3  3064               	movlw	100
  1446     00E4  07BC               	addwf	_dc,f
  1447     00E5  1803               	skipnc
  1448     00E6  0ABD               	incf	_dc+1,f
  1449     00E7  3000               	movlw	0
  1450     00E8  07BD               	addwf	_dc+1,f
  1451     00E9  28F0               	goto	i1l985
  1452     00EA                     i1l989:
  1453                           
  1454                           ;HC05_Bluetooth.c: 82:     {;HC05_Bluetooth.c: 83:         dc -= 100;
  1455     00EA  3064               	movlw	100
  1456     00EB  02BC               	subwf	_dc,f
  1457     00EC  3000               	movlw	0
  1458     00ED  1C03               	skipc
  1459     00EE  03BD               	decf	_dc+1,f
  1460     00EF  02BD               	subwf	_dc+1,f
  1461     00F0                     i1l985:
  1462                           
  1463                           ;HC05_Bluetooth.c: 78:         DC_Speed(dc);
  1464     00F0  083D               	movf	_dc+1,w
  1465     00F1  00F4               	movwf	i1DC_Speed@dutyCycle+1
  1466     00F2  083C               	movf	_dc,w
  1467     00F3  00F3               	movwf	i1DC_Speed@dutyCycle
  1468     00F4  120A  118A  219F   	fcall	i1_DC_Speed
  1469                           
  1470                           ;HC05_Bluetooth.c: 79:     }
  1471     00F7  0008               	return
  1472     00F8                     i1l987:
  1473     00F8  3036               	movlw	54
  1474     00F9  0677               	xorwf	Command_Handling@com,w
  1475     00FA  1903               	btfsc	3,2
  1476     00FB  28EA               	goto	i1l989
  1477                           
  1478                           ;HC05_Bluetooth.c: 87:     {;HC05_Bluetooth.c: 88:         UART_sendString("Invalid comm
      +                          and\r\n");
  1479     00FC  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1480     00FD  00F1               	movwf	i1UART_sendString@str
  1481     00FE  3080               	movlw	128
  1482     00FF  00F2               	movwf	i1UART_sendString@str+1
  1483     0100  120A  118A  21F0   	fcall	i1_UART_sendString
  1484     0103  0008               	return
  1485     0104                     __end_of_Command_Handling:
  1486                           
  1487                           	psect	text10
  1488     019F                     __ptext10:	
  1489 ;; *************** function i1_DC_Speed *****************
  1490 ;; Defined at:
  1491 ;;		line 44 in file "HC05_Bluetooth.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  dutyCycle       2    3[COMMON] unsigned int 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      void 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 300/0
  1502 ;;		On exit  : 300/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1505 ;;      Params:         2       0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0
  1507 ;;      Temps:          2       0       0       0       0
  1508 ;;      Totals:         4       0       0       0       0
  1509 ;;Total ram usage:        4 bytes
  1510 ;; Hardware stack levels used: 1
  1511 ;; Hardware stack levels required when called: 2
  1512 ;; This function calls:
  1513 ;;		i1_UART_sendString
  1514 ;; This function is called by:
  1515 ;;		_Command_Handling
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519     019F                     i1_DC_Speed:	
  1520                           ;psect for function i1_DC_Speed
  1521                           
  1522                           
  1523                           ;HC05_Bluetooth.c: 45:     if(dutyCycle <= (16000000 / 16) / 2000){
  1524                           
  1525                           ;incstack = 0
  1526                           ; Regs used in i1_DC_Speed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1527     019F  3001               	movlw	1
  1528     01A0  0274               	subwf	i1DC_Speed@dutyCycle+1,w
  1529     01A1  30F5               	movlw	245
  1530     01A2  1903               	skipnz
  1531     01A3  0273               	subwf	i1DC_Speed@dutyCycle,w
  1532     01A4  1803               	skipnc
  1533     01A5  29C7               	goto	i1l955
  1534                           
  1535                           ;HC05_Bluetooth.c: 47:         CCP1CONbits.CCP1Y = (dutyCycle) & 1;
  1536     01A6  0873               	movf	i1DC_Speed@dutyCycle,w
  1537     01A7  3901               	andlw	1
  1538     01A8  00F5               	movwf	??i1_DC_Speed
  1539     01A9  0EF5               	swapf	??i1_DC_Speed,f
  1540     01AA  0817               	movf	23,w	;volatile
  1541     01AB  0675               	xorwf	??i1_DC_Speed,w
  1542     01AC  39EF               	andlw	-17
  1543     01AD  0675               	xorwf	??i1_DC_Speed,w
  1544     01AE  0097               	movwf	23	;volatile
  1545                           
  1546                           ;HC05_Bluetooth.c: 48:         CCP1CONbits.CCP1X = (dutyCycle) & 2;
  1547     01AF  0873               	movf	i1DC_Speed@dutyCycle,w
  1548     01B0  3902               	andlw	2
  1549     01B1  00F5               	movwf	??i1_DC_Speed
  1550     01B2  0EF5               	swapf	??i1_DC_Speed,f
  1551     01B3  0DF5               	rlf	??i1_DC_Speed,f
  1552     01B4  0817               	movf	23,w	;volatile
  1553     01B5  0675               	xorwf	??i1_DC_Speed,w
  1554     01B6  39DF               	andlw	-33
  1555     01B7  0675               	xorwf	??i1_DC_Speed,w
  1556     01B8  0097               	movwf	23	;volatile
  1557                           
  1558                           ;HC05_Bluetooth.c: 50:         CCPR1L = (dutyCycle) >> 2;
  1559     01B9  0874               	movf	i1DC_Speed@dutyCycle+1,w
  1560     01BA  00F6               	movwf	??i1_DC_Speed+1
  1561     01BB  0873               	movf	i1DC_Speed@dutyCycle,w
  1562     01BC  00F5               	movwf	??i1_DC_Speed
  1563     01BD  1003               	clrc
  1564     01BE  0CF6               	rrf	??i1_DC_Speed+1,f
  1565     01BF  0CF5               	rrf	??i1_DC_Speed,f
  1566     01C0  1003               	clrc
  1567     01C1  0CF6               	rrf	??i1_DC_Speed+1,f
  1568     01C2  0CF5               	rrf	??i1_DC_Speed,f
  1569     01C3  0875               	movf	??i1_DC_Speed,w
  1570     01C4  0095               	movwf	21	;volatile
  1571                           
  1572                           ;HC05_Bluetooth.c: 52:         TMR2ON = 1;
  1573     01C5  1512               	bsf	18,2	;volatile
  1574                           
  1575                           ;HC05_Bluetooth.c: 53:     }
  1576     01C6  0008               	return
  1577     01C7                     i1l955:
  1578                           
  1579                           ;HC05_Bluetooth.c: 55:     {;HC05_Bluetooth.c: 56:         UART_sendString("Invalid duty
      +                           cycle\r\n");
  1580     01C7  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1581     01C8  00F1               	movwf	i1UART_sendString@str
  1582     01C9  3080               	movlw	128
  1583     01CA  00F2               	movwf	i1UART_sendString@str+1
  1584     01CB  120A  118A  21F0   	fcall	i1_UART_sendString
  1585     01CE  0008               	return
  1586     01CF                     __end_ofi1_DC_Speed:
  1587                           
  1588                           	psect	text11
  1589     01F0                     __ptext11:	
  1590 ;; *************** function i1_UART_sendString *****************
  1591 ;; Defined at:
  1592 ;;		line 42 in file "UART.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  str             2    1[COMMON] PTR unsigned char 
  1595 ;;		 -> STR_4(18), rcvStr(17), STR_2(18), STR_1(21), 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 300/0
  1604 ;;		On exit  : 300/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1607 ;;      Params:         2       0       0       0       0
  1608 ;;      Locals:         0       0       0       0       0
  1609 ;;      Temps:          0       0       0       0       0
  1610 ;;      Totals:         2       0       0       0       0
  1611 ;;Total ram usage:        2 bytes
  1612 ;; Hardware stack levels used: 1
  1613 ;; Hardware stack levels required when called: 1
  1614 ;; This function calls:
  1615 ;;		i1_UART_sendChar
  1616 ;; This function is called by:
  1617 ;;		_Command_Handling
  1618 ;;		_ISR
  1619 ;;		i1_DC_Speed
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623     01F0                     i1_UART_sendString:	
  1624                           ;psect for function i1_UART_sendString
  1625                           
  1626     01F0                     i1l939:	
  1627                           ;UART.c: 42: void UART_sendString(char* str);UART.c: 43: {;UART.c: 44:    while (*str)
  1628                           
  1629                           ;incstack = 0
  1630                           ; Regs used in i1_UART_sendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1631                           
  1632                           
  1633                           ;UART.c: 44:    while (*str)
  1634     01F0  0872               	movf	i1UART_sendString@str+1,w
  1635     01F1  00FF               	movwf	127
  1636     01F2  0871               	movf	i1UART_sendString@str,w
  1637     01F3  0084               	movwf	4
  1638     01F4  120A  118A  202A  120A  118A  	fcall	stringtab
  1639     01F9  3A00               	xorlw	0
  1640     01FA  1903               	btfsc	3,2
  1641     01FB  0008               	return
  1642                           
  1643                           ;UART.c: 45:    {;UART.c: 46:        UART_sendChar(*str++);
  1644     01FC  0872               	movf	i1UART_sendString@str+1,w
  1645     01FD  00FF               	movwf	127
  1646     01FE  0871               	movf	i1UART_sendString@str,w
  1647     01FF  0084               	movwf	4
  1648     0200  120A  118A  202A  120A  118A  	fcall	stringtab
  1649     0205  120A  118A  223B  120A  118A  	fcall	i1_UART_sendChar
  1650     020A  3001               	movlw	1
  1651     020B  07F1               	addwf	i1UART_sendString@str,f
  1652     020C  1803               	skipnc
  1653     020D  0AF2               	incf	i1UART_sendString@str+1,f
  1654     020E  3000               	movlw	0
  1655     020F  07F2               	addwf	i1UART_sendString@str+1,f
  1656     0210  29F0               	goto	i1l939
  1657     0211                     __end_ofi1_UART_sendString:
  1658                           
  1659                           	psect	text12
  1660     023B                     __ptext12:	
  1661 ;; *************** function i1_UART_sendChar *****************
  1662 ;; Defined at:
  1663 ;;		line 28 in file "UART.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  data            1    wreg     unsigned char 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  data            1    0[COMMON] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg
  1672 ;; Tracked objects:
  1673 ;;		On entry : 300/0
  1674 ;;		On exit  : 300/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         0       0       0       0       0
  1678 ;;      Locals:         1       0       0       0       0
  1679 ;;      Temps:          0       0       0       0       0
  1680 ;;      Totals:         1       0       0       0       0
  1681 ;;Total ram usage:        1 bytes
  1682 ;; Hardware stack levels used: 1
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		i1_UART_sendString
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690     023B                     i1_UART_sendChar:	
  1691                           ;psect for function i1_UART_sendChar
  1692                           
  1693                           
  1694                           ;incstack = 0
  1695                           ; Regs used in i1_UART_sendChar: [wreg]
  1696                           ;i1UART_sendChar@data stored from wreg
  1697     023B  00F0               	movwf	i1UART_sendChar@data
  1698     023C                     i1l119:	
  1699                           ;UART.c: 28: void UART_sendChar(char data);UART.c: 29: {;UART.c: 30:    while (!TXIF);
  1700                           
  1701     023C  1E0C               	btfss	12,4	;volatile
  1702     023D  2A3C               	goto	i1l119
  1703                           
  1704                           ;UART.c: 31:    TXREG = data;
  1705     023E  0870               	movf	i1UART_sendChar@data,w
  1706     023F  0099               	movwf	25	;volatile
  1707     0240  0008               	return
  1708     0241                     __end_ofi1_UART_sendChar:
  1709     007E                     btemp	set	126	;btemp
  1710     007E                     wtemp0	set	126
  1711                           
  1712                           	psect	idloc
  1713                           
  1714                           ;Config register IDLOC0 @ 0x2000
  1715                           ;	unspecified, using default values
  1716     2000                     	org	8192
  1717     2000  3FFF               	dw	16383
  1718                           
  1719                           ;Config register IDLOC1 @ 0x2001
  1720                           ;	unspecified, using default values
  1721     2001                     	org	8193
  1722     2001  3FFF               	dw	16383
  1723                           
  1724                           ;Config register IDLOC2 @ 0x2002
  1725                           ;	unspecified, using default values
  1726     2002                     	org	8194
  1727     2002  3FFF               	dw	16383
  1728                           
  1729                           ;Config register IDLOC3 @ 0x2003
  1730                           ;	unspecified, using default values
  1731     2003                     	org	8195
  1732     2003  3FFF               	dw	16383
  1733                           
  1734                           	psect	config
  1735                           
  1736                           ;Config register CONFIG @ 0x2007
  1737                           ;	Oscillator Selection bits
  1738                           ;	FOSC = HS, HS oscillator
  1739                           ;	Watchdog Timer Enable bit
  1740                           ;	WDTE = OFF, WDT disabled
  1741                           ;	Power-up Timer Enable bit
  1742                           ;	PWRTE = OFF, PWRT disabled
  1743                           ;	Brown-out Reset Enable bit
  1744                           ;	BOREN = ON, BOR enabled
  1745                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1746                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1747                           ;	Data EEPROM Memory Code Protection bit
  1748                           ;	CPD = OFF, Data EEPROM code protection off
  1749                           ;	Flash Program Memory Write Enable bits
  1750                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1751                           ;	In-Circuit Debugger Mode bit
  1752                           ;	DEBUG = 0x1, unprogrammed default
  1753                           ;	Flash Program Memory Code Protection bit
  1754                           ;	CP = OFF, Code protection off
  1755     2007                     	org	8199
  1756     2007  3FFA               	dw	16378

Data Sizes:
    Strings     72
    Constant    0
    Data        2
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_3(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> rcvStr(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMMON[2]), 

    UART_sendString@str	PTR unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[18]), rcvStr(BANK0[17]), STR_2(CODE[18]), STR_1(CODE[21]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_Command_Handling
    _ISR->_sprintf
    _Command_Handling->i1_DC_Speed
    i1_DC_Speed->i1_UART_sendString
    i1_UART_sendString->i1_UART_sendChar

Critical Paths under _main in BANK0

    _main->_DC_Speed
    _DC_Speed->_UART_sendString
    _UART_sendString->_UART_sendChar

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     952
                                              7 BANK0      3     3      0
                           _DC_Speed
                           _PWM_Init
                        _Timer2_Init
                          _UART_Init
                    _UART_sendString
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer2_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DC_Speed                                             4     2      2     633
                                              3 BANK0      4     2      2
                    _UART_sendString
 ---------------------------------------------------------------------------------
 (1) _UART_sendString                                      2     0      2     319
                                              1 BANK0      2     0      2
                      _UART_sendChar
 ---------------------------------------------------------------------------------
 (2) _UART_sendChar                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  6     6      0    1004
                                              8 COMMON     6     6      0
                   _Command_Handling
                            _sprintf
                  i1_UART_sendString
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             20    17      3     315
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (5) _Command_Handling                                     1     1      0     544
                                              7 COMMON     1     1      0
                         i1_DC_Speed
                  i1_UART_sendString
 ---------------------------------------------------------------------------------
 (6) i1_DC_Speed                                           4     2      2     311
                                              3 COMMON     4     2      2
                  i1_UART_sendString
 ---------------------------------------------------------------------------------
 (5) i1_UART_sendString                                    2     0      2     145
                                              1 COMMON     2     0      2
                    i1_UART_sendChar
 ---------------------------------------------------------------------------------
 (6) i1_UART_sendChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DC_Speed
     _UART_sendString
       _UART_sendChar
   _PWM_Init
   _Timer2_Init
   _UART_Init
   _UART_sendString

 _ISR (ROOT)
   _Command_Handling
     i1_DC_Speed
       i1_UART_sendString
         i1_UART_sendChar
     i1_UART_sendString
   _sprintf
   i1_UART_sendString

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2C      12        0.0%
ABS                  0      0      2C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jun 18 18:05:57 2023

                        pc 0002                         l82 013B                         _dc 003C  
                       fsr 0004                        l119 0236                        l947 01CF  
                      l971 0197                        _GIE 005F                        _RD0 0040  
                      _RD1 0041                        _PR2 0092                        _ISR 013C  
                      u297 011E                        _RX9 00C6                        _TX9 04C6  
                      fsr0 0004                        indf 0000                       ?_ISR 0070  
              ?i1_DC_Speed 0073                       STR_1 003A                       STR_2 004F  
                     STR_3 0073                       STR_4 0061    __end_ofi1_UART_sendChar 0241  
                     _BRGH 04C2                       _CREN 00C4                       _PEIE 005E  
                     _RCIE 0465                       _RCIF 0065                       i1l77 0164  
                     _OERR 00C1                       _SPEN 00C7                       _TXEN 04C5  
                     _TXIF 0064                       _SYNC 04C4                       _main 0104  
                     btemp 007E                       start 0010                      ??_ISR 0078  
         __end_of_DC_Speed 019F                      ?_main 0070                      i1l119 023C  
                    i1l939 01F0                      i1l955 01C7                      i1l981 00DF  
                    i1l985 00F0                      i1l977 00D6                      i1l987 00F8  
                    i1l989 00EA                      _RCREG 001A                      _SPBRG 0099  
                    _TXREG 0019                      pclath 000A           __end_of_PWM_Init 0246  
                    status 0003                      wtemp0 007E            __end_of_sprintf 00CA  
          _UART_sendString 01CF            __initialization 0013               __end_of_main 013C  
      Command_Handling@com 0077                     ??_main 0039                     _CCP1M2 00BA  
                   _CCP1M3 00BB                     _CCPR1L 0015           ?i1_UART_sendChar 0070  
         _Command_Handling 00CA                     i1l1101 00BC                     i1l1005 0098  
                   i1l1013 00AA                     i1l1015 0085                     i1l1017 00C5  
                   i1l1009 00A0                     i1l1055 0144                     _TMR2ON 0092  
                   _TRISC2 043A                     _TRISD0 0440                     _TRISD1 0441  
            ??_Timer2_Init 0032          __end_of_UART_Init 0226                     _rcvStr 0021  
                   saved_w 007E                  ??_sprintf 0073    __end_of_UART_sendString 01F0  
        UART_sendChar@data 0032                  ?_DC_Speed 0035    __end_of__initialization 0026  
           __pcstackCOMMON 0070               __pidataBANK0 0246        __end_of_Timer2_Init 0235  
                ?_PWM_Init 0070               ??i1_DC_Speed 0075      __end_of_UART_sendChar 023B  
               __pbssBANK0 0020                 ??_DC_Speed 0037                 __pmaintext 0104  
               __pintentry 0004         __end_ofi1_DC_Speed 01CF                 ??_PWM_Init 0032  
                  _T2CKPS0 0090                    _T2CKPS1 0091                 __stringtab 002A  
         ?_UART_sendString 0033                _Timer2_Init 022E   __end_of_Command_Handling 0104  
                  __ptext1 0211                    __ptext2 022E                    __ptext3 0241  
                  __ptext4 016F                    __ptext5 01CF                    __ptext6 0235  
                  __ptext7 013C                    __ptext8 0082                    __ptext9 00CA  
                  _command 0020          DC_Speed@dutyCycle 0035                    _sprintf 0082  
                  clrloop0 0227       end_of_initialization 0026       i1UART_sendString@str 0071  
                _UART_Init 0211                  _TRISCbits 0087                _CCP1CONbits 0017  
               ?_UART_Init 0070        start_initialization 0013                __end_of_ISR 016F  
              __pdataBANK0 003C        i1UART_sendChar@data 0070                  ___latbits 0002  
            __pcstackBANK0 0032               ?_Timer2_Init 0070                ??_UART_Init 0032  
        ??i1_UART_sendChar 0070          ?_Command_Handling 0070                  __pstrings 002A  
       ??_Command_Handling 0077                   ?_sprintf 0070                   _DC_Speed 016F  
        interrupt_function 0004          i1_UART_sendString 01F0                  clear_ram0 0226  
       ?i1_UART_sendString 0071         UART_sendString@str 0033        ??i1_UART_sendString 0073  
              __stringbase 0039                   _PWM_Init 0241              _UART_sendChar 0235  
__end_ofi1_UART_sendString 0211        i1DC_Speed@dutyCycle 0073         __end_of__stringtab 003A  
                 __ptext10 019F                   __ptext11 01F0                   __ptext12 023B  
           ?_UART_sendChar 0070          ??_UART_sendString 0035                 i1_DC_Speed 019F  
                 intlevel1 0000                  sprintf@ap 0075                  sprintf@sp 0077  
          i1_UART_sendChar 023B                  stringcode 0034                   sprintf@c 0076  
                 sprintf@f 0070                   stringdir 0034                   stringtab 002A  
          ??_UART_sendChar 0032  
